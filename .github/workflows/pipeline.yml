name: Tenant-Onboarding-Pipeline

on:
  workflow_dispatch:
    inputs:
      ownerName:
        required: true
        type: string
      repoName:
        required: true
        type: string
      templateName:
          required: true
          type: string
          default: voyager
      tenantName:
        required: true
        type: string

env:
  PAT: ${{ secrets.ARM_SEC }}
  userName: fakhrihuseynov
  email: f.huseynov@etisoftware.com
  repoName: ${{inputs.repoName}}
  templateName: ${{inputs.templateName}}
  tenantName: ${{inputs.tenantName}}
  ownerName: ${{inputs.ownerName}}


jobs:  
  Update-Onboard-Repository:
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repository
      run: |
        git config --global user.email ${{env.email}}
        git config --global user.name ${{env.userName}}
        git clone https://${{env.userName}}:${{env.PAT}}@github.com/${{env.ownerName}}/${{env.repoName}}
        cd ${{env.repoName}}
        git remote add ${{env.repoName}} https://${{env.userName}}:$PAT@github.com/ETI-Software-Solutions/eti-gitops-templates.git
        git fetch ${{env.repoName}}
        git merge ${{env.repoName}}/main --allow-unrelated-histories
        git push origin sandbox
  
    - name: Check Replace content
      continue-on-error: true
      run: | 
        cd $GITHUB_WORKSPACE/${{env.repoName}}
        pwd
        ls -l
        find ./ -name "${{env.templateName}}*" | while read f; do mv $f $(echo $f | sed 's/${{env.templateName}}/${{env.tenantName}}/'); done
        find . -type f \( -name "*.yml" -o -name "*.yaml" -o -name "*.gitignore" -o -name "*.properties"  \) -exec perl -i -p -e 's/${{env.templateName}}/${{env.tenantName}}/g' {} +
        git add .
        git commit -m "Rename files"
        git push origin sandbox